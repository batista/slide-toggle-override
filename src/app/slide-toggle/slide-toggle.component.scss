@use '@angular/material/core/style/variables';

// Configurable fields
$slide-width: 57px;
$slide-height: 2rem;
$toggle-button-to-container-ratio: 0.8;
$icon-size: 1.5rem;
$inner-label--font-size: 0.75rem;
$toggle-button--background-color--checked: #f76090;
$inner-label--background-color--checked: #fff;
$inner-label--text-color--checked: hsl(
  357,
  93%,
  65%
); // #{$toggle-button--background-color--checked} ?

$toggle-button--background-color--unchecked: #bebec4;
$inner-label--background-color--unchecked: #fff;
$inner-label--text-color--unchecked: $toggle-button--background-color--unchecked;

// Forcing configurations to acceptable boundaries
$_slide-width: max(#{$slide-width}, 55px);
$_toggle-button-to-container-ratio: min(
  max(#{$toggle-button-to-container-ratio}, 0.8),
  1
);
$toggle-button-width: calc(
  #{$slide-height} * #{$_toggle-button-to-container-ratio}
);
$toggle-button-height: #{$toggle-button-width};
$toggle-button-radius: $slide-height / 2;
$inner-label--text-pading: 0.5rem;
$bar-background-color-default: #ffffff59;

:host {
  background-color: darkblue;
  color: white;
  height: $slide-height;
  display: block;
  padding: 0.5rem;

  &.checked {
    background: linear-gradient(
      272.05deg,
      rgba(235, 1, 169, 0.8) 0%,
      rgba(249, 83, 92, 0.8) 99.99%,
      rgba(249, 83, 92, 0.8) 100%
    );
  }

  ::ng-deep {
    .mat-icon {
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .inner-label {
      display: flex;
      align-items: center;
      justify-content: space-between;
      font-size: $inner-label--font-size;
      line-height: 1rem;
      margin: 0;
      height: 100%;
      width: 100%;
      box-sizing: border-box;
      padding: $inner-label--text-pading;
      font-weight: 400;

      .checked,
      .unchecked {
        max-width: calc(50% - 3px);
        overflow: hidden;
        text-overflow: clip;
      }
    }

    // The label
    .mat-slide-toggle-content {
      font-weight: 700;
    }

    mat-slide-toggle {
      height: $slide-height;

      .mat-slide-toggle-bar {
        background-color: $bar-background-color-default;
        border-radius: $toggle-button-radius;
        height: $slide-height;
        width: $_slide-width;
      }

      $button-position-correction-factor: calc(
        #{$toggle-button-width} * (1 - #{$_toggle-button-to-container-ratio}) / 2
      );
      .mat-slide-toggle-thumb-container {
        left: $button-position-correction-factor;
        top: $button-position-correction-factor;
      }

      .mat-slide-toggle-thumb-container,
      .mat-slide-toggle-thumb {
        height: $toggle-button-height;
        width: $toggle-button-width;
      }

      .mat-slide-toggle-thumb {
        font-size: $icon-size;
      }

      &:not(.mat-checked) {
        .inner-label {
          color: $inner-label--text-color--unchecked;
        }

        .mat-slide-toggle-bar {
          background-color: $inner-label--background-color--unchecked;
        }

        .mat-slide-toggle-thumb {
          background-color: $toggle-button--background-color--unchecked;
        }
      }

      &.mat-checked {
        .inner-label {
          color: $inner-label--text-color--checked;
        }

        .mat-slide-toggle-bar {
          background-color: $inner-label--background-color--checked;
        }

        .mat-slide-toggle-thumb-container {
          transform: translate3d(
            calc(
              #{$_slide-width} - #{$toggle-button-width} - 2 * #{$button-position-correction-factor}
            ),
            0,
            0
          );
        }

        .mat-slide-toggle-thumb {
          background-color: $toggle-button--background-color--checked;
        }
      }
    }
  }
}
